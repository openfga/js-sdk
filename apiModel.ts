/* tslint:disable */
/* eslint-disable */
/**
 * JavaScript and Node.js SDK for OpenFGA
 *
 * API version: 0.1
 * Website: https://openfga.dev
 * Documentation: https://openfga.dev/docs
 * Support: https://discord.gg/8naAwJfWN6
 *
 * NOTE: This file was auto generated by OpenAPI Generator (https://openapi-generator.tech). DO NOT EDIT.
 */


/**
 * 
 * @export
 * @interface Any
 */
export interface Any {
    [key: string]: object | any;

    /**
     * 
     * @type {string}
     * @memberof Any
     */
    type?: string;
}
/**
 * 
 * @export
 * @interface Assertion
 */
export interface Assertion {
    /**
     * 
     * @type {TupleKey}
     * @memberof Assertion
     */
    tuple_key?: TupleKey;
    /**
     * 
     * @type {boolean}
     * @memberof Assertion
     */
    expectation: boolean;
}
/**
 * - no_auth_error: no error  - auth_failure: generic authentication error. Details available via message field.  - auth_failed_invalid_subject: authentication failure due to invalid subject.  - auth_failed_invalid_audience: authentication failure due to invalid audience.  - auth_failed_invalid_issuer: authentication failure due to invalid issuer.  - invalid_claims: authentication failure due to invalid claims.  - auth_failed_invalid_bearer_token: authentication failure due to invalid bearer token.  - missing_customer_in_bearer_token: authentication failure with customer id missing in bearer token.  - missing_store_in_bearer_token: authentication failure with store id missing in bearer token.  - store_mismatch_in_bearer_token: authentication failure due to store mismatch from bearer token.  - customer_mismatch_in_bearer_token: authentication failure due to customer id in the request being different from the customer id in the bearer token.  - bearer_token_missing: bearer token missing in request.  - unauthenticated: unauthenticated.  - insufficient_permissions: insufficient permissions.  - unauthorized_principal: authentication denial due to unauthorized principal.
 * @export
 * @enum {string}
 */

export enum AuthErrorCode {
    NoAuthError = 'no_auth_error',
    AuthFailure = 'auth_failure',
    AuthFailedInvalidSubject = 'auth_failed_invalid_subject',
    AuthFailedInvalidAudience = 'auth_failed_invalid_audience',
    AuthFailedInvalidIssuer = 'auth_failed_invalid_issuer',
    InvalidClaims = 'invalid_claims',
    AuthFailedInvalidBearerToken = 'auth_failed_invalid_bearer_token',
    MissingCustomerInBearerToken = 'missing_customer_in_bearer_token',
    MissingStoreInBearerToken = 'missing_store_in_bearer_token',
    StoreMismatchInBearerToken = 'store_mismatch_in_bearer_token',
    CustomerMismatchInBearerToken = 'customer_mismatch_in_bearer_token',
    BearerTokenMissing = 'bearer_token_missing',
    Unauthenticated = 'unauthenticated',
    InsufficientPermissions = 'insufficient_permissions',
    UnauthorizedPrincipal = 'unauthorized_principal'
}

/**
 * 
 * @export
 * @interface AuthenticationErrorMessageResponse
 */
export interface AuthenticationErrorMessageResponse {
    /**
     * 
     * @type {AuthErrorCode}
     * @memberof AuthenticationErrorMessageResponse
     */
    code?: AuthErrorCode;
    /**
     * 
     * @type {string}
     * @memberof AuthenticationErrorMessageResponse
     */
    message?: string;
}
/**
 * 
 * @export
 * @interface AuthorizationModel
 */
export interface AuthorizationModel {
    /**
     * 
     * @type {string}
     * @memberof AuthorizationModel
     */
    id?: string;
    /**
     * 
     * @type {Array<TypeDefinition>}
     * @memberof AuthorizationModel
     */
    type_definitions?: Array<TypeDefinition>;
}
/**
 * 
 * @export
 * @interface AuthorizationmodelDifference
 */
export interface AuthorizationmodelDifference {
    /**
     * 
     * @type {Userset}
     * @memberof AuthorizationmodelDifference
     */
    base?: Userset;
    /**
     * 
     * @type {Userset}
     * @memberof AuthorizationmodelDifference
     */
    subtract?: Userset;
}
/**
 * 
 * @export
 * @interface AuthorizationmodelTupleToUserset
 */
export interface AuthorizationmodelTupleToUserset {
    /**
     * 
     * @type {ObjectRelation}
     * @memberof AuthorizationmodelTupleToUserset
     */
    tupleset?: ObjectRelation;
    /**
     * 
     * @type {ObjectRelation}
     * @memberof AuthorizationmodelTupleToUserset
     */
    computedUserset?: ObjectRelation;
}
/**
 * 
 * @export
 * @interface CheckRequestParams
 */
export interface CheckRequestParams {
    /**
     * 
     * @type {TupleKey}
     * @memberof CheckRequestParams
     */
    tuple_key?: TupleKey;
    /**
     * 
     * @type {ContextualTupleKeys}
     * @memberof CheckRequestParams
     */
    contextual_tuples?: ContextualTupleKeys;
    /**
     * 
     * @type {string}
     * @memberof CheckRequestParams
     */
    authorization_model_id?: string;
    /**
     * Defaults to false. Making it true has performance implications.
     * @type {boolean}
     * @memberof CheckRequestParams
     */
    trace?: boolean;
}
/**
 * 
 * @export
 * @interface CheckResponse
 */
export interface CheckResponse {
    /**
     * 
     * @type {boolean}
     * @memberof CheckResponse
     */
    allowed?: boolean;
    /**
     * For internal use only.
     * @type {string}
     * @memberof CheckResponse
     */
    resolution?: string;
}
/**
 * 
 * @export
 * @interface Computed
 */
export interface Computed {
    /**
     * 
     * @type {string}
     * @memberof Computed
     */
    userset?: string;
}
/**
 * 
 * @export
 * @interface ContextualTupleKeys
 */
export interface ContextualTupleKeys {
    /**
     * 
     * @type {Array<TupleKey>}
     * @memberof ContextualTupleKeys
     */
    tuple_keys: Array<TupleKey>;
}
/**
 * - no_error: no error  - validation_error: generic validation error.  - authorization_model_not_found: authorization model not found.  - authorization_model_resolution_too_complex: too many rewrite rules to be resolved.  - invalid_write_input: invalid write input.  - cannot_allow_duplicate_tuples_in_one_request: duplicate tuples in one request.  - cannot_allow_duplicate_types_in_one_request: duplicate types in one request.  - cannot_allow_multiple_references_to_one_relation: cannot use a relation to define itself.  - invalid_continuation_token: invalid continuation token.  - invalid_tuple_set: invalid tuple set.  - invalid_check_input: invalid check input.  - invalid_expand_input: invalid expand input.  - unsupported_user_set: unsupported user set.  - invalid_object_format: invalid object format.  - token_issuer_already_registered: token issuers already registered.  - tos_agreement_already_signed: agreement already signed.  - write_failed_due_to_invalid_input: write request failed due to invalid input.  - authorization_model_assertions_not_found: no assertions found for authorization model.  - settings_not_found: settings not found.  - latest_authorization_model_not_found: latest authorization model not found.  - type_not_found: type not found.  - relation_not_found: relation not found.  - empty_relation_definition: empty relation definition.  - invalid_user: invalid user.  - invalid_token_issuer: invalid token issuer.  - invalid_tuple: invalid tuple.  - unknown_relation: unknown relation.  - store_id_invalid_length: store id has invalid length.  - issuer_url_invalid_uri: issuer url has invalid URI.  - issuer_url_required_absolute_path: issuer url is not absolute path.  - assertions_too_many_items: assertions have too many items.  - id_too_long: ID is too long.  - invalid_environment: invalid environment is specified.  - authorization_model_id_too_long: authorization model id is too long.  - tuple_key_value_not_specified: tuple key value is not specified.  - tuple_keys_too_many_or_too_few_items: tuple keys have too few or too many items.  - page_size_invalid: page size is outside of acceptable range.  - param_missing_value: params value is missing.  - difference_base_missing_value: difference\'s base value is missing.  - subtract_base_missing_value: subtract base value is missing.  - object_too_long: object length is too long.  - relation_too_long: relation length is too long.  - type_definitions_too_few_items: type definitions do not have enough item.  - type_invalid_length: type length is invalid.  - type_invalid_pattern: type does not match expected pattern.  - relations_too_few_items: relations have too few items.  - relations_too_long: relations\' length is too long.  - relations_invalid_pattern: relations do not match expected pattern.  - object_invalid_pattern: object does not match expected pattern.  - query_string_type_continuation_token_mismatch: type in the query string and the continuation token don\'t match.  - exceeded_entity_limit: Reached maximum number of <entity>.  - invalid_contextual_tuple: Invalid contextual tuple.  - duplicate_contextual_tuple: Duplicate contextual tuple.
 * @export
 * @enum {string}
 */

export enum ErrorCode {
    NoError = 'no_error',
    ValidationError = 'validation_error',
    AuthorizationModelNotFound = 'authorization_model_not_found',
    AuthorizationModelResolutionTooComplex = 'authorization_model_resolution_too_complex',
    InvalidWriteInput = 'invalid_write_input',
    CannotAllowDuplicateTuplesInOneRequest = 'cannot_allow_duplicate_tuples_in_one_request',
    CannotAllowDuplicateTypesInOneRequest = 'cannot_allow_duplicate_types_in_one_request',
    CannotAllowMultipleReferencesToOneRelation = 'cannot_allow_multiple_references_to_one_relation',
    InvalidContinuationToken = 'invalid_continuation_token',
    InvalidTupleSet = 'invalid_tuple_set',
    InvalidCheckInput = 'invalid_check_input',
    InvalidExpandInput = 'invalid_expand_input',
    UnsupportedUserSet = 'unsupported_user_set',
    InvalidObjectFormat = 'invalid_object_format',
    TokenIssuerAlreadyRegistered = 'token_issuer_already_registered',
    TosAgreementAlreadySigned = 'tos_agreement_already_signed',
    WriteFailedDueToInvalidInput = 'write_failed_due_to_invalid_input',
    AuthorizationModelAssertionsNotFound = 'authorization_model_assertions_not_found',
    SettingsNotFound = 'settings_not_found',
    LatestAuthorizationModelNotFound = 'latest_authorization_model_not_found',
    TypeNotFound = 'type_not_found',
    RelationNotFound = 'relation_not_found',
    EmptyRelationDefinition = 'empty_relation_definition',
    InvalidUser = 'invalid_user',
    InvalidTokenIssuer = 'invalid_token_issuer',
    InvalidTuple = 'invalid_tuple',
    UnknownRelation = 'unknown_relation',
    StoreIdInvalidLength = 'store_id_invalid_length',
    IssuerUrlInvalidUri = 'issuer_url_invalid_uri',
    IssuerUrlRequiredAbsolutePath = 'issuer_url_required_absolute_path',
    AssertionsTooManyItems = 'assertions_too_many_items',
    IdTooLong = 'id_too_long',
    InvalidEnvironment = 'invalid_environment',
    AuthorizationModelIdTooLong = 'authorization_model_id_too_long',
    TupleKeyValueNotSpecified = 'tuple_key_value_not_specified',
    TupleKeysTooManyOrTooFewItems = 'tuple_keys_too_many_or_too_few_items',
    PageSizeInvalid = 'page_size_invalid',
    ParamMissingValue = 'param_missing_value',
    DifferenceBaseMissingValue = 'difference_base_missing_value',
    SubtractBaseMissingValue = 'subtract_base_missing_value',
    ObjectTooLong = 'object_too_long',
    RelationTooLong = 'relation_too_long',
    TypeDefinitionsTooFewItems = 'type_definitions_too_few_items',
    TypeInvalidLength = 'type_invalid_length',
    TypeInvalidPattern = 'type_invalid_pattern',
    RelationsTooFewItems = 'relations_too_few_items',
    RelationsTooLong = 'relations_too_long',
    RelationsInvalidPattern = 'relations_invalid_pattern',
    ObjectInvalidPattern = 'object_invalid_pattern',
    QueryStringTypeContinuationTokenMismatch = 'query_string_type_continuation_token_mismatch',
    ExceededEntityLimit = 'exceeded_entity_limit',
    InvalidContextualTuple = 'invalid_contextual_tuple',
    DuplicateContextualTuple = 'duplicate_contextual_tuple'
}

/**
 * 
 * @export
 * @interface ExpandRequestParams
 */
export interface ExpandRequestParams {
    /**
     * 
     * @type {TupleKey}
     * @memberof ExpandRequestParams
     */
    tuple_key?: TupleKey;
    /**
     * 
     * @type {string}
     * @memberof ExpandRequestParams
     */
    authorization_model_id?: string;
}
/**
 * 
 * @export
 * @interface ExpandResponse
 */
export interface ExpandResponse {
    /**
     * 
     * @type {UsersetTree}
     * @memberof ExpandResponse
     */
    tree?: UsersetTree;
}
/**
 * - no_internal_error: no error  - internal_error: generic internal error.  - auth_internal_error: internal error due to authentication error.  - auth_failed_error_fetching_well_known_jwks: authentication failure due to internal error in fetching well-known/jwks.json.  - cancelled: internal error - request being cancelled.  - deadline_exceeded: internal error - deadline exceeded.  - already_exists: internal error - already exists.  - resource_exhausted: internal error - resource exhausted.  - failed_precondition: internal error - failed precondition.  - aborted: internal error - aborted.  - out_of_range: internal error - out of range.  - unavailable: internal error - unavailable.  - data_loss: internal error - data loss.
 * @export
 * @enum {string}
 */

export enum InternalErrorCode {
    NoInternalError = 'no_internal_error',
    InternalError = 'internal_error',
    AuthInternalError = 'auth_internal_error',
    AuthFailedErrorFetchingWellKnownJwks = 'auth_failed_error_fetching_well_known_jwks',
    Cancelled = 'cancelled',
    DeadlineExceeded = 'deadline_exceeded',
    AlreadyExists = 'already_exists',
    ResourceExhausted = 'resource_exhausted',
    FailedPrecondition = 'failed_precondition',
    Aborted = 'aborted',
    OutOfRange = 'out_of_range',
    Unavailable = 'unavailable',
    DataLoss = 'data_loss'
}

/**
 * 
 * @export
 * @interface InternalErrorMessageResponse
 */
export interface InternalErrorMessageResponse {
    /**
     * 
     * @type {InternalErrorCode}
     * @memberof InternalErrorMessageResponse
     */
    code?: InternalErrorCode;
    /**
     * 
     * @type {string}
     * @memberof InternalErrorMessageResponse
     */
    message?: string;
}
/**
 * A leaf node contains either - a set of users (which may be individual users, or usersets   referencing other relations) - a computed node, which is the result of a computed userset   value in the authorization model - a tupleToUserset nodes, containing the result of expanding   a tupleToUserset value in a authorization model.
 * @export
 * @interface Leaf
 */
export interface Leaf {
    /**
     * 
     * @type {Users}
     * @memberof Leaf
     */
    users?: Users;
    /**
     * 
     * @type {Computed}
     * @memberof Leaf
     */
    computed?: Computed;
    /**
     * 
     * @type {UsersetTreeTupleToUserset}
     * @memberof Leaf
     */
    tupleToUserset?: UsersetTreeTupleToUserset;
}
/**
 * 
 * @export
 * @interface Node
 */
export interface Node {
    /**
     * 
     * @type {string}
     * @memberof Node
     */
    name?: string;
    /**
     * 
     * @type {Leaf}
     * @memberof Node
     */
    leaf?: Leaf;
    /**
     * 
     * @type {UsersetTreeDifference}
     * @memberof Node
     */
    difference?: UsersetTreeDifference;
    /**
     * 
     * @type {Nodes}
     * @memberof Node
     */
    union?: Nodes;
    /**
     * 
     * @type {Nodes}
     * @memberof Node
     */
    intersection?: Nodes;
}
/**
 * 
 * @export
 * @interface Nodes
 */
export interface Nodes {
    /**
     * 
     * @type {Array<Node>}
     * @memberof Nodes
     */
    nodes?: Array<Node>;
}
/**
 * - no_not_found_error: no error  - undefined_endpoint: undefined endpoint.  - customer_id_not_found: customer ID is not found.  - store_id_not_found: store ID not found  - store_client_id_not_found: store client ID not found.  - unimplemented: method is unimplemented
 * @export
 * @enum {string}
 */

export enum NotFoundErrorCode {
    NoNotFoundError = 'no_not_found_error',
    UndefinedEndpoint = 'undefined_endpoint',
    CustomerIdNotFound = 'customer_id_not_found',
    StoreIdNotFound = 'store_id_not_found',
    StoreClientIdNotFound = 'store_client_id_not_found',
    Unimplemented = 'unimplemented'
}

/**
 * 
 * @export
 * @interface ObjectRelation
 */
export interface ObjectRelation {
    /**
     * 
     * @type {string}
     * @memberof ObjectRelation
     */
    object?: string;
    /**
     * 
     * @type {string}
     * @memberof ObjectRelation
     */
    relation?: string;
}
/**
 * 
 * @export
 * @interface PathUnknownErrorMessageResponse
 */
export interface PathUnknownErrorMessageResponse {
    /**
     * 
     * @type {NotFoundErrorCode}
     * @memberof PathUnknownErrorMessageResponse
     */
    code?: NotFoundErrorCode;
    /**
     * 
     * @type {string}
     * @memberof PathUnknownErrorMessageResponse
     */
    message?: string;
}
/**
 * 
 * @export
 * @interface ReadAssertionsResponse
 */
export interface ReadAssertionsResponse {
    /**
     * 
     * @type {string}
     * @memberof ReadAssertionsResponse
     */
    authorization_model_id?: string;
    /**
     * 
     * @type {Array<Assertion>}
     * @memberof ReadAssertionsResponse
     */
    assertions?: Array<Assertion>;
}
/**
 * 
 * @export
 * @interface ReadAuthorizationModelResponse
 */
export interface ReadAuthorizationModelResponse {
    /**
     * 
     * @type {AuthorizationModel}
     * @memberof ReadAuthorizationModelResponse
     */
    authorization_model?: AuthorizationModel;
}
/**
 * 
 * @export
 * @interface ReadAuthorizationModelsResponse
 */
export interface ReadAuthorizationModelsResponse {
    /**
     * 
     * @type {Array<string>}
     * @memberof ReadAuthorizationModelsResponse
     */
    authorization_model_ids?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ReadAuthorizationModelsResponse
     */
    continuation_token?: string;
}
/**
 * 
 * @export
 * @interface ReadChangesResponse
 */
export interface ReadChangesResponse {
    /**
     * 
     * @type {Array<TupleChange>}
     * @memberof ReadChangesResponse
     */
    changes?: Array<TupleChange>;
    /**
     * 
     * @type {string}
     * @memberof ReadChangesResponse
     */
    continuation_token?: string;
}
/**
 * 
 * @export
 * @interface ReadRequestParams
 */
export interface ReadRequestParams {
    /**
     * 
     * @type {TupleKey}
     * @memberof ReadRequestParams
     */
    tuple_key?: TupleKey;
    /**
     * 
     * @type {string}
     * @memberof ReadRequestParams
     */
    authorization_model_id?: string;
    /**
     * 
     * @type {number}
     * @memberof ReadRequestParams
     */
    page_size?: number;
    /**
     * 
     * @type {string}
     * @memberof ReadRequestParams
     */
    continuation_token?: string;
}
/**
 * 
 * @export
 * @interface ReadResponse
 */
export interface ReadResponse {
    /**
     * 
     * @type {Array<Tuple>}
     * @memberof ReadResponse
     */
    tuples?: Array<Tuple>;
    /**
     * 
     * @type {string}
     * @memberof ReadResponse
     */
    continuation_token?: string;
}
/**
 * - no_resource_exhausted_error: no error  - rate_limit_exceeded: operation failed due to exceeding rate limit.  - auth_rate_limit_exceeded: rate limit error during authentication.
 * @export
 * @enum {string}
 */

export enum ResourceExhaustedErrorCode {
    NoResourceExhaustedError = 'no_resource_exhausted_error',
    RateLimitExceeded = 'rate_limit_exceeded',
    AuthRateLimitExceeded = 'auth_rate_limit_exceeded'
}

/**
 * 
 * @export
 * @interface ResourceExhaustedErrorMessageResponse
 */
export interface ResourceExhaustedErrorMessageResponse {
    /**
     * 
     * @type {ResourceExhaustedErrorCode}
     * @memberof ResourceExhaustedErrorMessageResponse
     */
    code?: ResourceExhaustedErrorCode;
    /**
     * 
     * @type {string}
     * @memberof ResourceExhaustedErrorMessageResponse
     */
    message?: string;
}
/**
 * 
 * @export
 * @interface Status
 */
export interface Status {
    /**
     * 
     * @type {number}
     * @memberof Status
     */
    code?: number;
    /**
     * 
     * @type {string}
     * @memberof Status
     */
    message?: string;
    /**
     * 
     * @type {Array<Any>}
     * @memberof Status
     */
    details?: Array<Any>;
}
/**
 * 
 * @export
 * @interface Tuple
 */
export interface Tuple {
    /**
     * 
     * @type {TupleKey}
     * @memberof Tuple
     */
    key?: TupleKey;
    /**
     * 
     * @type {string}
     * @memberof Tuple
     */
    timestamp?: string;
}
/**
 * 
 * @export
 * @interface TupleChange
 */
export interface TupleChange {
    /**
     * 
     * @type {TupleKey}
     * @memberof TupleChange
     */
    tuple_key?: TupleKey;
    /**
     * 
     * @type {TupleOperation}
     * @memberof TupleChange
     */
    operation?: TupleOperation;
    /**
     * 
     * @type {string}
     * @memberof TupleChange
     */
    timestamp?: string;
}
/**
 * 
 * @export
 * @interface TupleKey
 */
export interface TupleKey {
    /**
     * 
     * @type {string}
     * @memberof TupleKey
     */
    object?: string;
    /**
     * 
     * @type {string}
     * @memberof TupleKey
     */
    relation?: string;
    /**
     * 
     * @type {string}
     * @memberof TupleKey
     */
    user?: string;
}
/**
 * 
 * @export
 * @interface TupleKeys
 */
export interface TupleKeys {
    /**
     * 
     * @type {Array<TupleKey>}
     * @memberof TupleKeys
     */
    tuple_keys: Array<TupleKey>;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum TupleOperation {
    Write = 'write',
    Delete = 'delete'
}

/**
 * 
 * @export
 * @interface TypeDefinition
 */
export interface TypeDefinition {
    /**
     * 
     * @type {string}
     * @memberof TypeDefinition
     */
    type: string;
    /**
     * 
     * @type {{ [key: string]: Userset; }}
     * @memberof TypeDefinition
     */
    relations: { [key: string]: Userset; };
}
/**
 * 
 * @export
 * @interface TypeDefinitions
 */
export interface TypeDefinitions {
    /**
     * 
     * @type {Array<TypeDefinition>}
     * @memberof TypeDefinitions
     */
    type_definitions?: Array<TypeDefinition>;
}
/**
 * 
 * @export
 * @interface Users
 */
export interface Users {
    /**
     * 
     * @type {Array<string>}
     * @memberof Users
     */
    users?: Array<string>;
}
/**
 * 
 * @export
 * @interface Userset
 */
export interface Userset {
    /**
     * A DirectUserset is a sentinel message for referencing the direct members specified by an object/relation mapping.
     * @type {object}
     * @memberof Userset
     */
    this?: object;
    /**
     * 
     * @type {ObjectRelation}
     * @memberof Userset
     */
    computedUserset?: ObjectRelation;
    /**
     * 
     * @type {AuthorizationmodelTupleToUserset}
     * @memberof Userset
     */
    tupleToUserset?: AuthorizationmodelTupleToUserset;
    /**
     * 
     * @type {Usersets}
     * @memberof Userset
     */
    union?: Usersets;
    /**
     * 
     * @type {Usersets}
     * @memberof Userset
     */
    intersection?: Usersets;
    /**
     * 
     * @type {AuthorizationmodelDifference}
     * @memberof Userset
     */
    difference?: AuthorizationmodelDifference;
}
/**
 * A UsersetTree contains the result of an Expansion.
 * @export
 * @interface UsersetTree
 */
export interface UsersetTree {
    /**
     * 
     * @type {Node}
     * @memberof UsersetTree
     */
    root?: Node;
}
/**
 * 
 * @export
 * @interface UsersetTreeDifference
 */
export interface UsersetTreeDifference {
    /**
     * 
     * @type {Node}
     * @memberof UsersetTreeDifference
     */
    base?: Node;
    /**
     * 
     * @type {Node}
     * @memberof UsersetTreeDifference
     */
    subtract?: Node;
}
/**
 * 
 * @export
 * @interface UsersetTreeTupleToUserset
 */
export interface UsersetTreeTupleToUserset {
    /**
     * 
     * @type {string}
     * @memberof UsersetTreeTupleToUserset
     */
    tupleset?: string;
    /**
     * 
     * @type {Array<Computed>}
     * @memberof UsersetTreeTupleToUserset
     */
    computed?: Array<Computed>;
}
/**
 * 
 * @export
 * @interface Usersets
 */
export interface Usersets {
    /**
     * 
     * @type {Array<Userset>}
     * @memberof Usersets
     */
    child?: Array<Userset>;
}
/**
 * 
 * @export
 * @interface ValidationErrorMessageResponse
 */
export interface ValidationErrorMessageResponse {
    /**
     * 
     * @type {ErrorCode}
     * @memberof ValidationErrorMessageResponse
     */
    code?: ErrorCode;
    /**
     * 
     * @type {string}
     * @memberof ValidationErrorMessageResponse
     */
    message?: string;
}
/**
 * 
 * @export
 * @interface WriteAssertionsRequestParams
 */
export interface WriteAssertionsRequestParams {
    /**
     * 
     * @type {Array<Assertion>}
     * @memberof WriteAssertionsRequestParams
     */
    assertions: Array<Assertion>;
}
/**
 * 
 * @export
 * @interface WriteAuthorizationModelResponse
 */
export interface WriteAuthorizationModelResponse {
    /**
     * 
     * @type {string}
     * @memberof WriteAuthorizationModelResponse
     */
    authorization_model_id?: string;
}
/**
 * 
 * @export
 * @interface WriteRequestParams
 */
export interface WriteRequestParams {
    /**
     * 
     * @type {TupleKeys}
     * @memberof WriteRequestParams
     */
    writes?: TupleKeys;
    /**
     * 
     * @type {TupleKeys}
     * @memberof WriteRequestParams
     */
    deletes?: TupleKeys;
    /**
     * 
     * @type {string}
     * @memberof WriteRequestParams
     */
    authorization_model_id?: string;
}

